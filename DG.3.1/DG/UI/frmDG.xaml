<mah:MetroWindow x:Class="DG.UI.frmDG"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DG.UI"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:viewModels="clr-namespace:DG.ViewModels"
        mc:Ignorable="d"
        x:Name="MainWindow"
        Height="450" Width="1000"
        Loaded="frmDG_OnLoaded"
        Closed="frmDG_OnClosed">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Icons/IconDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataGridTextColumn x:Key="TextColumn" x:Shared="False">
                <DataGridTextColumn.ElementStyle>
                    <Style>
                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>

            <DataGridTextColumn x:Key="NumberColumn" x:Shared="False">
                <DataGridTextColumn.ElementStyle>
                    <Style>
                        <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
        </ResourceDictionary>
    </Window.Resources>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowLastSeparator="False" ShowSeparators="True">
            <Separator/>
            <StackPanel Orientation="Horizontal" Margin="4,0">
                <TextBlock Margin="0,0,4,0"
                   VerticalAlignment="Center" 
                   Text="{Binding StringFormat=Zoom {0:P0}, ElementName=uiScaleSlider, Path=Value}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=uiScaleSlider}" Value="True">
                                    <Setter Property="Opacity" Value="1"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=uiScaleSlider}" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Slider x:Name="uiScaleSlider" Width="70" Value="1" Minimum="0.7" Maximum="2" LargeChange="0.1" SmallChange="0.1"
                mah:SliderHelper.ChangeValueBy="LargeChange"
                mah:SliderHelper.EnableMouseWheel="MouseHover"
                Focusable="True"
                Orientation="Horizontal" IsSnapToTickEnabled="False" TickPlacement="None"
                ToolTip="Determines the UI scale factor. Click right mouse button to revert scaling back to 100%.">
                    <Slider.InputBindings>
                        <MouseBinding Gesture="RightClick"
                          Command="{Binding Source={x:Static viewModels:AppViewModel.GlobalContext}, Path=CmdRestoreScalingFactor}"
                          CommandParameter="{Binding ElementName=uiScaleSlider}">
                        </MouseBinding>
                    </Slider.InputBindings>
                </Slider>
            </StackPanel>

            <Button Name="Btn_ToggleTheme" Command="{Binding Source={x:Static viewModels:AppViewModel.GlobalContext}, Path=CmdToggleTheme}"
              Content="Toggle Theme"
              ToolTip="Change the color theme of application" />
            <Separator Margin="0 0 4 0"/>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <DockPanel LastChildFill="True">
        <DockPanel.LayoutTransform>
            <ScaleTransform
        CenterX="0" CenterY="0"
        ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}"
        ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}"
      />
        </DockPanel.LayoutTransform>

        <WrapPanel Name="TestCommandBar" DockPanel.Dock="Top" Orientation="Horizontal"  IsEnabled="{Binding IsCommandBarEnabled, ElementName=MainWindow}" >
            <TextBox Name ="Records" Width="100px" PreviewTextInput="Records_OnPreviewTextInput">1000</TextBox>
            <Button Name="Load" Content="Load data" Click="Load_OnClick"/>
            <Button Name="LoadGlDocList" Content="Load GlDocList" Click="LoadGlDocList_OnClick" />
            <Button Name="Clear" Content="Clear" Click="Clear_OnClick"/>
            <Button Name="MemoryInUse" Content="Memory In Use" Click="Do_MemoryInUse"/>
            <Button Name="Debug" Content="Debug" Click="Debug_OnClick"/>
        </WrapPanel>

        <WrapPanel DockPanel.Dock="Top" IsEnabled="{Binding IsCommandBarEnabled, ElementName=MainWindow}">
            <Button Content="{StaticResource Icon_Settings}"/>
            <ToggleButton Name="Btn_OpenSetting2" IsThreeState="False" Content="{StaticResource Icon_Open}" Checked="DropDownButton_OnChecked">
                <ToggleButton.Resources>
                    <ContextMenu x:Key="items" StaysOpen="False" Placement="Bottom">
                        <MenuItem Header="Copy"/>
                        <MenuItem Header="Paste"/>
                        <MenuItem Header="Delete"/>
                    </ContextMenu>
                </ToggleButton.Resources>
            </ToggleButton>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <mah:DropDownButton Name="DownButton1"
                               Width="100"
                               DisplayMemberPath="Title"
                               Content="{StaticResource Icon_GridOn}"
                               Icon="{StaticResource Icon_GridOn}">
            </mah:DropDownButton>
        </WrapPanel>

        <ToolBar Name="CommandToolBar" DockPanel.Dock="Top" IsEnabled="{Binding IsCommandBarEnabled, ElementName=MainWindow}" ToolBarTray.IsLocked="True" ToolBar.OverflowMode="Never">
            <Button Content="{StaticResource Icon_Settings}"/>
            <mah:DropDownButton Name="Btn_OpenSetting" Icon="{StaticResource Icon_Open}" BorderBrush="Transparent" ArrowVisibility="Collapsed"
                               IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasItems}" Margin="-1"/>
            <Button Content="{StaticResource Icon_Save}"/>
            <Separator/>
            <Button Name="Btn_ToggleGridVisibility" Command="{Binding ToggleGrid}" CommandParameter="{Binding ElementName=DataGrid}"/>
            <Button Content="{StaticResource Icon_Font}"/>
            <Separator/>
            <ComboBox Name="Btn_CellViewMode" Background="Transparent" DisplayMemberPath="Name" SelectionChanged="Do_CellViewMode"/>

            <Separator/>
            <mah:DropDownButton Name="Btn_GroupLayer" Icon="{StaticResource Icon_GroupLayer}" BorderBrush="Transparent" ArrowVisibility="Collapsed"
                               IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasItems}" Margin="-1"/>
            <ToggleButton Name="Btn_GroupLayer2" IsThreeState="False" Content="{StaticResource Icon_GroupLayer}" Checked="DropDownButton_OnChecked">
                <ToggleButton.Resources>
                    <ContextMenu x:Key="items" StaysOpen="False" Placement="Bottom">
                        <MenuItem Header="Copy"/>
                        <MenuItem Header="Paste"/>
                        <MenuItem Header="Delete"/>
                    </ContextMenu>
                </ToggleButton.Resources>
            </ToggleButton>
            <Separator/>
            <Button Content="{StaticResource Icon_SortAscending}"/>
            <Button Content="{StaticResource Icon_SortDescending}"/>
            <Button Content="{StaticResource Icon_SortOff}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_FilterOn}"/>
            <Button Content="{StaticResource Icon_FilterOff}"/>
            <TextBox Name="Txt_FastFilter" Width="100" TextChanged="Do_FastFilter"/>
            <Button Content="{StaticResource Icon_Find}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Print}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Clone}"/>
            <Button Content="{StaticResource Icon_Refresh}"/>
            <Separator/>
            <Button Content="{StaticResource Icon_Excel}"/>
            <Button Content="{StaticResource Icon_TextFile}"/>
            <Separator/>
            <ComboBox Name="Cb_Themes" Background="Transparent" DisplayMemberPath="Name" SelectionChanged="Do_ThemesChanged">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Background" Value="{Binding Path=Background}"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </ToolBar>

        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
            <ComboBox Name="Cb_Log" Width="200px"></ComboBox>
            <TextBlock Width="200px">Status bar</TextBlock>
        </StackPanel>

        <DockPanel LastChildFill="True" HorizontalAlignment="Left"
               VerticalAlignment="Top">
            <WrapPanel DockPanel.Dock="Top" Background="AliceBlue" Margin="0px"  Name="GroupPanel">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="Padding" Value="2,0" />
                    </Style>
                </WrapPanel.Resources>
                <Button>Group</Button>
                <Button>panel</Button>
            </WrapPanel>
            <Canvas Name="Canvas" Background="Bisque">
                <Grid Name="AAA" Canvas.Top="40" Canvas.Left="40">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Thumb Grid.Row="0" Height="20" Background="YellowGreen" DragDelta="Thumb_OnDragDelta"></Thumb>
                    <DataGrid Grid.Row="1" Name="DataGrid" Width="1000" Height="600" Background="LightCyan"
                          ScrollViewer.CanContentScroll="True" 
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          EnableRowVirtualization="True"
                          EnableColumnVirtualization="True"
                          AutoGenerateColumns="False"
                          SelectionMode="Extended"
                          SelectionUnit="CellOrRowHeader"
                          CanUserReorderColumns="True"
                          CanUserResizeColumns="True"
                          CanUserResizeRows="False"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top">
                        <!--<DataGrid.RowHeaderTemplate>
        <DataTemplate>
          <ToggleButton x:Name="RowHeaderToggleButton"
                        Cursor="Hand" />
        </DataTemplate>
      </DataGrid.RowHeaderTemplate>-->
                    </DataGrid>
                </Grid>
            </Canvas>
        </DockPanel>

    </DockPanel>
</mah:MetroWindow>