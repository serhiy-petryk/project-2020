<UserControl x:Class="DGView.Views.DGEditSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:effects="clr-namespace:WpfSpLib.Effects;assembly=WpfSpLib"
             xmlns:common="clr-namespace:WpfSpLib.Common;assembly=WpfSpLib"
             xmlns:wpfSpLibHelpers="clr-namespace:WpfSpLib.Helpers;assembly=WpfSpLib"
             xmlns:helpers="clr-namespace:DGView.Helpers"
             xmlns:viewModels="clr-namespace:DGView.ViewModels"
             xmlns:sys="clr-namespace:System;assembly=System.Runtime"
             xmlns:dgCoreCommon="clr-namespace:DGCore.Common;assembly=DGCore"
             xmlns:controls="clr-namespace:WpfSpLib.Controls;assembly=WpfSpLib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Color x:Key="DataGridBaseColor">#FFF5FAFF</Color>
        <SolidColorBrush x:Key="DataGridBaseBrush" Color="{StaticResource DataGridBaseColor}"/>

        <Style x:Key="CheckBoxColumnElementStyle" TargetType="CheckBox" BasedOn="{StaticResource MonochromeCheckBoxStyle}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="effects:ChromeEffect.Monochrome" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridCell}, Path=IsReadOnly}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <WrapPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                   Height="28" Margin="0 0 0 4"
                   Background="{Binding RelativeSource={RelativeSource AncestorType=wpfSpLibHelpers:IColorThemeSupport}, Path=ActualThemeColor, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+25%}">
            <Button x:Name="ApplyButton" Content="Примінити" BorderThickness="0" Padding="2 2 4 2"
                    HorizontalAlignment="Left"
                    Style="{StaticResource MonochromeButtonBaseStyle}"
                    effects:ChromeEffect.Monochrome="{Binding RelativeSource={RelativeSource AncestorType=Panel}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}"
                    effects:IconEffect.Geometry="{StaticResource LightningGeometry}"
                    effects:IconEffect.Margin="6 6 4 4"
                    Command="{Binding CmdApply}"/>

            <Separator Style="{DynamicResource BarSeparatorStyle}"/>

            <Button x:Name="ClearFilterButton" BorderThickness="0" Padding="2"
                    HorizontalAlignment="Left"
                    Style="{StaticResource MonochromeButtonBaseStyle}"
                    effects:ChromeEffect.Monochrome="{Binding RelativeSource={RelativeSource AncestorType=Panel}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}"
                    Command="{Binding CmdClearFilter}">
                <StackPanel Orientation="Horizontal">
                    <ContentControl Margin="0 0 0 2" Content="{StaticResource ClearFilterIcon}"/>
                    <TextBlock Padding="4 0" VerticalAlignment="Center" Text="Очистити фільтр"/>
                </StackPanel>
            </Button>

            <Separator Style="{DynamicResource BarSeparatorStyle}"/>

        </WrapPanel>

        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Фільтр по назві колонки:" Target="{Binding ElementName=QuickFilter}"
                       Foreground="{Binding RelativeSource={RelativeSource AncestorType=wpfSpLibHelpers:IColorThemeSupport}, Path=ActualThemeColor, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+75%}"/>
                <TextBox Grid.Column="1" x:Name="QuickFilter" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                         Text="{Binding QuickFilterText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         Style="{StaticResource MonochromeTextBoxStyle}"
                         effects:ChromeEffect.Monochrome="{Binding RelativeSource={RelativeSource AncestorType=wpfSpLibHelpers:IColorThemeSupport}, Path=ActualThemeColor, Converter={x:Static common:ColorHslBrush.Instance}}"
                         effects:TextBoxEffects.VisibleButtons="Keyboard,Clear,Separator1px"/>
            </Grid>

            <DataGrid x:Name="PropertyList" Grid.Row="1"
                      HorizontalAlignment="Left" VerticalAlignment="Stretch"
                      Background="{StaticResource DataGridBaseBrush}"
                      Foreground="{Binding Source={StaticResource DataGridBaseBrush}, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+75%}"
                      ItemsSource="{Binding PropertiesData}"
                      HeadersVisibility="All" AutoGenerateColumns="False"
                      SelectionMode="Extended" SelectionUnit="FullRow"
                      CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserResizeRows="False"
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False"
                      Style="{StaticResource MonochromeDGStyle}"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      PreviewMouseMove="PropertyList_OnPreviewMouseMove"
                      PreviewGiveFeedback="PropertyList_OnPreviewGiveFeedback"
                      PreviewDragOver="PropertyList_OnPreviewDragOver"
                      PreviewDragEnter="PropertyList_OnPreviewDragEnter"
                      PreviewDragLeave="PropertyList_OnPreviewDragLeave"
                      PreviewDrop="PropertyList_OnPreviewDrop"
                      AllowDrop="True"
                      LoadingRow="PropertyList_OnLoadingRow">

                <DataGrid.Resources>
                    <Style x:Key="TotalFunctionColumnStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MonochromeComboBoxStyle}" x:Shared="False">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="effects:ChromeEffect.Monochrome" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" />
                        <Setter Property="effects:ComboBoxEffects.ClearButtonStyle" Value="{StaticResource MonochromeComboBoxClearButtonStyle}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsTotalSupport}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="GroupDirectionCellStyle" TargetType="CheckBox" BasedOn="{StaticResource SortingCheckBoxStyle}">
                        <Setter Property="effects:ChromeEffect.Monochrome" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" />
                        <Setter Property="effects:ChromeEffect.ChromeMatrix" Value="+0%,+67%,+67%,67, ,+67%,+67%,100, +10%,+10%/+85%,+10%/+85%,100" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsSortingSupport}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="{StaticResource DataGridBaseBrush}"/>
                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+75%}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFrozen}" Value="True">
                                <Setter Property="Background" Value="{Binding Source={StaticResource DataGridBaseBrush}, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+5%}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                <Setter Property="Background" Value="{Binding Source={StaticResource DataGridBaseBrush}, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+180:+0:+10%}"/>
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{Binding Source={StaticResource DataGridBaseBrush}, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+25%}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Padding="1" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="DataGridCell.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Background}" />
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Foreground}" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Header="Не&#x0a;показувати" Binding="{Binding IsHidden, UpdateSourceTrigger=PropertyChanged}"
                                            ElementStyle="{StaticResource CheckBoxColumnElementStyle}"/>
                    <DataGridTextColumn Header="Назва колонки" Binding="{Binding Name}" IsReadOnly="True"/>
                    <DataGridCheckBoxColumn Header="Закріплено" Binding="{Binding IsFrozen, UpdateSourceTrigger=PropertyChanged}"
                                            ElementStyle="{StaticResource CheckBoxColumnElementStyle}"/>
                    <DataGridCheckBoxColumn Header="Групувати?" MinWidth="26" IsThreeState="True"
                                            Binding="{Binding GroupDirection, UpdateSourceTrigger=PropertyChanged, Converter={x:Static helpers:ListSortDirectionConverter.Instance}}"
                                            ElementStyle="{StaticResource GroupDirectionCellStyle}" EditingElementStyle="{StaticResource GroupDirectionCellStyle}"/>
                    <DataGridTextColumn Header="Формат&#x0a;даних" Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.Format, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridComboBoxColumn Header="Підсумок" IsReadOnly="True" SelectedValueBinding="{Binding TotalFunction, UpdateSourceTrigger=PropertyChanged}"
                                            ItemsSource="{Binding Source={x:Static dgCoreCommon:Enums.TotalFunctionsWithoutNull}}"
                                            ElementStyle="{StaticResource TotalFunctionColumnStyle}"/>
<!--                    <DataGridTemplateColumn Header="Формат&#x0a;підсумків">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <controls:FormatBox Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.TotalFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Формат&#x0a;підсумків" Binding="{Binding TotalFormat}"/>-->
                    <DataGridTextColumn Header="Опис" Binding="{Binding Description}" IsReadOnly="True" MaxWidth="200"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="1" Margin="5 0 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" HorizontalAlignment="Stretch" Padding="4 2" BorderThickness="1"
                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=wpfSpLibHelpers:IColorThemeSupport}, Path=ActualThemeColor, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}">
                <CheckBox x:Name="cbShowTotalRow" Content="Show total row?" IsThreeState="False" FontWeight="SemiBold" FontSize="12"
                          IsChecked="{Binding Settings.ShowTotalRow}"
                          Style="{StaticResource MonochromeCheckBoxStyle}"/>
            </Border>

            <TextBlock Grid.Row="1" Margin="0 4 0 0" Text="Groups and sortings:"/>
            <TreeView x:Name="GroupTreeView" Grid.Row="2" Padding="0 0 0 10"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      ItemsSource="{Binding GroupItem.Children}"
                      PreviewMouseMove="GroupTreeView_OnPreviewMouseMove"
                      PreviewGiveFeedback="PropertyList_OnPreviewGiveFeedback"
                      PreviewDragOver="GroupTreeView_OnPreviewDragOver"
                      PreviewDragEnter="GroupTreeView_OnPreviewDragEnter"
                      PreviewDragLeave="PropertyList_OnPreviewDragLeave"
                      PreviewDrop="GroupTreeView_OnPreviewDrop"
                      AllowDrop="True">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Background" Value="{Binding BaseColor, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                        <Setter Property="IsExpanded" Value="True"/>
                        <Setter Property="SnapsToDevicePixels" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Border x:Name="Border" BorderThickness="1" Margin="0 0 0 1" RenderTransformOrigin="0.5 0.5"
                                            Background="{Binding ElementName=BaseColor, Path=Background}"
                                            BorderBrush="{Binding ElementName=BaseColor, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}">
                                        <Border.RenderTransform>
                                            <ScaleTransform x:Name="BorderTransform" ScaleX="1" ScaleY="1"/>
                                        </Border.RenderTransform>

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <ContentControl x:Name="BaseColor" Grid.Row="0" Opacity="0"
                                                            Background="{Binding BaseColor, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                                            <Border Name="Bd" Grid.Row="0" Margin="1"
                                                    HorizontalAlignment="Stretch"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                <ContentPresenter x:Name="PART_Header" ContentSource="Header"/>
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Margin="15 0 0 0"/>
                                        </Grid>

                                        <!--<VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup Name="ExpansionStates">
                                                <VisualState Name="Expanded">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="{x:Static helpers:AnimationHelper.AnimationDurationSlow}" Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" From="0" To="1"/>
                                                        <DoubleAnimation Duration="{x:Static helpers:AnimationHelper.AnimationDurationSlow}" From="0" To="1" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" Storyboard.TargetName="BorderTransform"/>
                                                        <DoubleAnimation Duration="{x:Static helpers:AnimationHelper.AnimationDurationSlow}" From="0" To="1" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" Storyboard.TargetName="BorderTransform"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>-->

                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=Type}" Value="Label">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                                            <Setter TargetName="Border" Property="BorderThickness" Value="1 0"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type}" Value="Sorting">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                                            <Setter TargetName="Border" Property="BorderThickness" Value="1 0"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=Type}" Value="Label"/>
                                                <Condition Binding="{Binding Path=Parent.Type}" Value="Details"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Height" Value="2"/>
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.ItemContainerStyle>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type viewModels:PropertyGroupItem}" ItemsSource="{Binding Children}">
                        <Grid x:Name="Grid">
                            <Border x:Name="MainBorder" BorderThickness="1"
                                    BorderBrush="{Binding Path=BaseColor, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="cbSort" Grid.Column="0" IsThreeState="False" Style="{StaticResource SortingCheckBoxStyle}"
                                              Width="20" VerticalAlignment="Stretch" Margin="0 0 4 0" Padding="2"
                                              IsChecked="{Binding SortDirection, UpdateSourceTrigger=PropertyChanged, Converter={x:Static helpers:ListSortDirectionConverter.Instance}}"
                                              effects:ChromeEffect.Monochrome="{Binding Path=BaseColor}"
                                              effects:ChromeEffect.ChromeMatrix="+0%,+70%,+0%,40, +0%,+70%,+0%,100, +25%,+25%/+75%,+25%/+50%,100"/>
                                    <TextBlock x:Name="Text" Grid.Column="1" Margin="0" Padding="0" Text="{Binding Name}" TextWrapping="Wrap"
                                               VerticalAlignment="Center"
                                               Background="{Binding Path=BaseColor, Converter={x:Static common:ColorHslBrush.Instance}}"
                                               Foreground="{Binding Path=BaseColor, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+75%}"/>
                                    <Button x:Name="btnRemove" Grid.Column="2" Margin="4 0 0 0" Width="20"
                                            Command="{Binding CmdRemove}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                            Style="{StaticResource DefaultButtonBaseStyle}"
                                            effects:ChromeEffect.Monochrome="{Binding Path=BaseColor}"
                                            effects:CornerRadiusEffect.CornerRadius="0"
                                            effects:IconEffect.Geometry="M87.1125 212.8875A9.375 9.375 0 0 0 100.3875 212.8875L150 163.25625L199.6125 212.8875A9.375 9.375 0 0 0 212.8875 199.6125L163.25625 150L212.8875 100.3875A9.375 9.375 0 0 0 199.6125 87.1125L150 136.74375L100.3875 87.1125A9.375 9.375 0 0 0 87.1125 100.3875L136.74375 150L87.1125 199.6125A9.375 9.375 0 0 0 87.1125 212.8875z"
                                            effects:IconEffect.Margin="2"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding CanSort}" Value="False">
                                <Setter TargetName="cbSort" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="btnRemove" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="Transparent"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="Details">
                                <Setter TargetName="Text" Property="Padding" Value="0"/>
                                <Setter TargetName="Text" Property="FontWeight" Value="SemiBold"/>
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

        </Grid>
    </Grid>
</UserControl>
